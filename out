Gadget(1441c3, 0x8048bbd, 0x8048bbf, None, None)
0x8048bbd:	adc	al, 0x41
0x8048bbf:	ret	
Gadget(042460a00408ffd0c9c3, 0x8048620, 0x8048629, None, None)
0x8048620:	add	al, 0x24
0x8048622:	pushal	
0x8048623:	mov	al, byte ptr [0xd0ff0804]
0x8048628:	leave	
0x8048629:	ret	
Gadget(042460a00408ffd2c9c3, 0x804865d, 0x8048666, None, None)
0x804865d:	add	al, 0x24
0x804865f:	pushal	
0x8048660:	mov	al, byte ptr [0xd2ff0804]
0x8048665:	leave	
0x8048666:	ret	
Gadget(04c7042460a00408ffd2c9c3, 0x804865b, 0x8048666, None, None)
0x804865b:	add	al, 0xc7
0x804865d:	add	al, 0x24
0x804865f:	pushal	
0x8048660:	mov	al, byte ptr [0xd2ff0804]
0x8048665:	leave	
0x8048666:	ret	
Gadget(00f3c3, 0x8048a4f, 0x8048a51, None, None)
0x8048a4f:	add	bl, dh
0x8048a51:	ret	
Gadget(00000000c9c3, 0x80489dc, 0x80489e1, None, None)
0x80489dc:	add	byte ptr [eax], al
0x80489de:	add	byte ptr [eax], al
0x80489e0:	leave	
0x80489e1:	ret	
Gadget(00000000ba44332211898bdec0ad0bc3, 0x80486fd, 0x804870c, None, None)
0x80486fd:	add	byte ptr [eax], al
0x80486ff:	add	byte ptr [eax], al
0x8048701:	mov	edx, 0x11223344
0x8048706:	mov	dword ptr [ebx + 0xbadc0de], ecx
0x804870c:	ret	
Gadget(000000ba44332211898bdec0ad0bc3, 0x80486fe, 0x804870c, None, None)
0x80486fe:	add	byte ptr [eax], al
0x8048700:	add	byte ptr [edx + 0x11223344], bh
0x8048706:	mov	dword ptr [ebx + 0xbadc0de], ecx
0x804870c:	ret	
Gadget(000000c9c3, 0x80489dd, 0x80489e1, None, None)
0x80489dd:	add	byte ptr [eax], al
0x80489df:	add	cl, cl
0x80489e1:	ret	
Gadget(000083c4085bc3, 0x80484b4, 0x80484ba, None, None)
0x80484b4:	add	byte ptr [eax], al
0x80484b6:	add	esp, 8
0x80484b9:	pop	ebx
0x80484ba:	ret	
Gadget(0000c9c3, 0x80489de, 0x80489e1, None, None)
0x80489de:	add	byte ptr [eax], al
0x80489e0:	leave	
0x80489e1:	ret	
Gadget(0000ba44332211898bdec0ad0bc3, 0x80486ff, 0x804870c, None, None)
0x80486ff:	add	byte ptr [eax], al
0x8048701:	mov	edx, 0x11223344
0x8048706:	mov	dword ptr [ebx + 0xbadc0de], ecx
0x804870c:	ret	
Gadget(0000c3, 0x80486f9, 0x80486fb, None, None)
0x80486f9:	add	byte ptr [eax], al
0x80486fb:	ret	
Gadget(000031c031dbc3, 0x8048711, 0x8048717, None, None)
0x8048711:	add	byte ptr [eax], al
0x8048713:	xor	eax, eax
0x8048715:	xor	ebx, ebx
0x8048717:	ret	
Gadget(0031c031dbc3, 0x8048712, 0x8048717, None, None)
0x8048712:	add	byte ptr [ecx], dh
0x8048714:	sal	byte ptr [ecx], 0xdb
0x8048717:	ret	
Gadget(000f94c3, 0x804872e, 0x8048731, None, None)
0x804872e:	add	byte ptr [edi], cl
0x8048730:	xchg	eax, esp
0x8048731:	ret	
Gadget(00ba44332211898bdec0ad0bc3, 0x8048700, 0x804870c, None, None)
0x8048700:	add	byte ptr [edx + 0x11223344], bh
0x8048706:	mov	dword ptr [ebx + 0xbadc0de], ecx
0x804870c:	ret	
Gadget(00c9c3, 0x80489df, 0x80489e1, None, None)
0x80489df:	add	cl, cl
0x80489e1:	ret	
Gadget(0100000f94c3, 0x804872c, 0x8048731, None, None)
0x804872c:	add	dword ptr [eax], eax
0x804872e:	add	byte ptr [edi], cl
0x8048730:	xchg	eax, esp
0x8048731:	ret	
Gadget(05fbffffb800000000c9c3, 0x80489d7, 0x80489e1, None, None)
0x80489d7:	add	eax, 0xb8fffffb
0x80489dc:	add	byte ptr [eax], al
0x80489de:	add	byte ptr [eax], al
0x80489e0:	leave	
0x80489e1:	ret	
Gadget(01d8c3, 0x8048732, 0x8048734, None, None)
0x8048732:	add	eax, ebx
0x8048734:	ret	
Gadget(01c8c3, 0x80487a9, 0x80487ab, None, None)
0x80487a9:	add	eax, ecx
0x80487ab:	ret	
Gadget(01cbc3, 0x80487a6, 0x80487a8, None, None)
0x80487a6:	add	ebx, ecx
0x80487a8:	ret	
Gadget(01c1c3, 0x804875e, 0x8048760, None, None)
0x804875e:	add	ecx, eax
0x8048760:	ret	
Gadget(01d1c3, 0x8048764, 0x8048766, None, None)
0x8048764:	add	ecx, edx
0x8048766:	ret	
Gadget(01dac3, 0x8048761, 0x8048763, None, None)
0x8048761:	add	edx, ebx
0x8048763:	ret	
Gadget(01cac3, 0x8048722, 0x8048724, None, None)
0x8048722:	add	edx, ecx
0x8048724:	ret	
Gadget(83c40c5b5e5f5dc3, 0x8048a45, 0x8048a4c, None, None)
0x8048a45:	add	esp, 0xc
0x8048a48:	pop	ebx
0x8048a49:	pop	esi
0x8048a4a:	pop	edi
0x8048a4b:	pop	ebp
0x8048a4c:	ret	
Gadget(83c4085bc3, 0x80484b6, 0x80484ba, None, None)
0x80484b6:	add	esp, 8
0x80484b9:	pop	ebx
0x80484ba:	ret	
Gadget(01c4c3, 0x8048742, 0x8048744, None, None)
0x8048742:	add	esp, eax
0x8048744:	ret	
Gadget(01dc595ac3, 0x8048748, 0x804874c, None, None)
0x8048748:	add	esp, ebx
0x804874a:	pop	ecx
0x804874b:	pop	edx
0x804874c:	ret	
Gadget(2460a00408ffd0c9c3, 0x8048621, 0x8048629, None, None)
0x8048621:	and	al, 0x60
0x8048623:	mov	al, byte ptr [0xd0ff0804]
0x8048628:	leave	
0x8048629:	ret	
Gadget(2460a00408ffd2c9c3, 0x804865e, 0x8048666, None, None)
0x804865e:	and	al, 0x60
0x8048660:	mov	al, byte ptr [0xd2ff0804]
0x8048665:	leave	
0x8048666:	ret	
Gadget(24e805fbffffb800000000c9c3, 0x80489d5, 0x80489e1, None, None)
0x80489d5:	and	al, 0xe8
0x80489d7:	add	eax, 0xb8fffffb
0x80489dc:	add	byte ptr [eax], al
0x80489de:	add	byte ptr [eax], al
0x80489e0:	leave	
0x80489e1:	ret	
Gadget(2404c3, 0x80487be, 0x80487c0, None, None)
0x80487be:	and	al, 4
0x80487c0:	ret	
Gadget(240889fd59c3, 0x804871c, 0x8048721, None, None)
0x804871c:	and	al, 8
0x804871e:	mov	ebp, edi
0x8048720:	pop	ecx
0x8048721:	ret	
Gadget(20470e1441c3, 0x8048bba, 0x8048bbf, None, None)
0x8048bba:	and	byte ptr [edi + 0xe], al
0x8048bbd:	adc	al, 0x41
0x8048bbf:	ret	
Gadget(2211898bdec0ad0bc3, 0x8048704, 0x804870c, None, None)
0x8048704:	and	dl, byte ptr [ecx]
0x8048706:	mov	dword ptr [ebx + 0xbadc0de], ecx
0x804870c:	ret	
Gadget(21d8c3, 0x804878e, 0x8048790, None, None)
0x804878e:	and	eax, ebx
0x8048790:	ret	
Gadget(21d0c3, 0x8048797, 0x8048799, None, None)
0x8048797:	and	eax, edx
0x8048799:	ret	
Gadget(21cbc3, 0x8048794, 0x8048796, None, None)
0x8048794:	and	ebx, ecx
0x8048796:	ret	
Gadget(21d3c3, 0x804879a, 0x804879c, None, None)
0x804879a:	and	ebx, edx
0x804879c:	ret	
Gadget(21d1c3, 0x8048791, 0x8048793, None, None)
0x8048791:	and	ecx, edx
0x8048793:	ret	
Gadget(98efbe000031c031dbc3, 0x804870e, 0x8048717, None, None)
0x804870e:	cwde	
0x804870f:	out	dx, eax
0x8048710:	mov	esi, 0xc0310000
0x8048715:	xor	ebx, ebx
0x8048717:	ret	
Gadget(4d0e20470e1441c3, 0x8048bb8, 0x8048bbf, None, None)
0x8048bb8:	dec	ebp
0x8048bb9:	push	cs
0x8048bba:	and	byte ptr [edi + 0xe], al
0x8048bbd:	adc	al, 0x41
0x8048bbf:	ret	
Gadget(f7f3c3, 0x80487b0, 0x80487b2, None, None)
0x80487b0:	div	ebx
0x80487b2:	ret	
ERROR: interrupt 0
ERROR: EAX 0x3fab1097
ERROR: EBP 0x16c95fab
ERROR: ESP 0x1112233
ERROR: EDX 0x2763d5fd
ERROR: EDI 0x83577c4
ERROR: EBX 0x2080129a
ERROR: ESI 0x3bf33831
ERROR: ECX 0x235f73a
ERROR: interrupt 0
ERROR: EAX 0x2e9a2e8
ERROR: EBP 0x20b79c75
ERROR: ESP 0x1112233
ERROR: EDX 0x218cd1f0
ERROR: EDI 0x37c7d927
ERROR: EBX 0x196dd9e2
ERROR: ESI 0x3fa9644
ERROR: ECX 0xc017ab
Gadget(dc595ac3, 0x8048749, 0x804874c, None, None)
0x8048749:	fcomp	qword ptr [ecx + 0x5a]
0x804874c:	ret	
Gadget(d831db81e9230100000f94c3, 0x8048726, 0x8048731, None, None)
0x8048726:	fdiv	dword ptr [ecx]
0x8048728:	fild	dword ptr [ecx + 0x123e9]
0x804872e:	add	byte ptr [edi], cl
0x8048730:	xchg	eax, esp
0x8048731:	ret	
Gadget(db81e9230100000f94c3, 0x8048728, 0x8048731, None, None)
0x8048728:	fild	dword ptr [ecx + 0x123e9]
0x804872e:	add	byte ptr [edi], cl
0x8048730:	xchg	eax, esp
0x8048731:	ret	
Gadget(e444c1e40a58c3, 0x80486e1, 0x80486e7, None, None)
0x80486e1:	in	al, 0x44
0x80486e3:	shl	esp, 0xa
0x80486e6:	pop	eax
0x80486e7:	ret	
Gadget(e40a58c3, 0x80486e4, 0x80486e7, None, None)
0x80486e4:	in	al, 0xa
0x80486e6:	pop	eax
0x80486e7:	ret	
Gadget(ed31e444c1e40a58c3, 0x80486df, 0x80486e7, None, None)
0x80486df:	in	eax, dx
0x80486e0:	xor	esp, esp
0x80486e2:	inc	esp
0x80486e3:	shl	esp, 0xa
0x80486e6:	pop	eax
0x80486e7:	ret	
Gadget(410e304d0e20470e1441c3, 0x8048bb5, 0x8048bbf, None, None)
0x8048bb5:	inc	ecx
0x8048bb6:	push	cs
0x8048bb7:	xor	byte ptr [ebp + 0xe], cl
0x8048bba:	and	byte ptr [edi + 0xe], al
0x8048bbd:	adc	al, 0x41
0x8048bbf:	ret	
Gadget(41c3, 0x8048bbe, 0x8048bbf, None, None)
0x8048bbe:	inc	ecx
0x8048bbf:	ret	
Gadget(470e1441c3, 0x8048bbb, 0x8048bbf, None, None)
0x8048bbb:	inc	edi
0x8048bbc:	push	cs
0x8048bbd:	adc	al, 0x41
0x8048bbf:	ret	
Gadget(44c1e40a58c3, 0x80486e2, 0x80486e7, None, None)
0x80486e2:	inc	esp
0x80486e3:	shl	esp, 0xa
0x80486e6:	pop	eax
0x80486e7:	ret	
Gadget(9fc3, 0x8048738, 0x8048739, None, None)
0x8048738:	lahf	
0x8048739:	ret	
Gadget(c9c3, 0x8048628, 0x8048629, None, None)
0x8048628:	leave	
0x8048629:	ret	
Gadget(f00000c3, 0x80486f8, 0x80486fb, None, None)
0x80486f8:	lock add	byte ptr [eax], al
0x80486fb:	ret	
Gadget(a00408ffd0c9c3, 0x8048623, 0x8048629, None, None)
0x8048623:	mov	al, byte ptr [0xd0ff0804]
0x8048628:	leave	
0x8048629:	ret	
Gadget(a00408ffd2c9c3, 0x8048660, 0x8048666, None, None)
0x8048660:	mov	al, byte ptr [0xd2ff0804]
0x8048665:	leave	
0x8048666:	ret	
Gadget(8900c3, 0x8048779, 0x804877b, None, None)
0x8048779:	mov	dword ptr [eax], eax
0x804877b:	ret	
Gadget(8918c3, 0x804873f, 0x8048741, None, None)
0x804873f:	mov	dword ptr [eax], ebx
0x8048741:	ret	
Gadget(8908c3, 0x804877f, 0x8048781, None, None)
0x804877f:	mov	dword ptr [eax], ecx
0x8048781:	ret	
Gadget(898bdec0ad0bc3, 0x8048706, 0x804870c, None, None)
0x8048706:	mov	dword ptr [ebx + 0xbadc0de], ecx
0x804870c:	ret	
Gadget(8903c3, 0x804877c, 0x804877e, None, None)
0x804877c:	mov	dword ptr [ebx], eax
0x804877e:	ret	
Gadget(8911c3, 0x8048758, 0x804875a, None, None)
0x8048758:	mov	dword ptr [ecx], edx
0x804875a:	ret	
Gadget(b800000000c9c3, 0x80489db, 0x80489e1, None, None)
0x80489db:	mov	eax, 0
0x80489e0:	leave	
0x80489e1:	ret	
Gadget(b800000000ba44332211898bdec0ad0bc3, 0x80486fc, 0x804870c, None, None)
0x80486fc:	mov	eax, 0
0x8048701:	mov	edx, 0x11223344
0x8048706:	mov	dword ptr [ebx + 0xbadc0de], ecx
0x804870c:	ret	
Gadget(8b00c3, 0x8048773, 0x8048775, None, None)
0x8048773:	mov	eax, dword ptr [eax]
0x8048775:	ret	
Gadget(8b83efbeadde8b910df0ad0bc3, 0x80486e8, 0x80486f4, None, None)
0x80486e8:	mov	eax, dword ptr [ebx - 0x21524111]
0x80486ee:	mov	edx, dword ptr [ecx + 0xbadf00d]
0x80486f4:	ret	
Gadget(8b03c3, 0x804873c, 0x804873e, None, None)
0x804873c:	mov	eax, dword ptr [ebx]
0x804873e:	ret	
Gadget(89d8c3, 0x8048735, 0x8048737, None, None)
0x8048735:	mov	eax, ebx
0x8048737:	ret	
Gadget(89e0c3, 0x8048745, 0x8048747, None, None)
0x8048745:	mov	eax, esp
0x8048747:	ret	
Gadget(89fd59c3, 0x804871e, 0x8048721, None, None)
0x804871e:	mov	ebp, edi
0x8048720:	pop	ecx
0x8048721:	ret	
Gadget(8b18c3, 0x8048776, 0x8048778, None, None)
0x8048776:	mov	ebx, dword ptr [eax]
0x8048778:	ret	
Gadget(8b1c24c3, 0x80485f0, 0x80485f3, None, None)
0x80485f0:	mov	ebx, dword ptr [esp]
0x80485f3:	ret	
Gadget(8b09c3, 0x804876a, 0x804876c, None, None)
0x804876a:	mov	ecx, dword ptr [ecx]
0x804876c:	ret	
Gadget(8b0ac3, 0x804876d, 0x804876f, None, None)
0x804876d:	mov	ecx, dword ptr [edx]
0x804876f:	ret	
Gadget(ba44332211898bdec0ad0bc3, 0x8048701, 0x804870c, None, None)
0x8048701:	mov	edx, 0x11223344
0x8048706:	mov	dword ptr [ebx + 0xbadc0de], ecx
0x804870c:	ret	
Gadget(8b13c3, 0x8048782, 0x8048784, None, None)
0x8048782:	mov	edx, dword ptr [ebx]
0x8048784:	ret	
Gadget(8b910df0ad0bc3, 0x80486ee, 0x80486f4, None, None)
0x80486ee:	mov	edx, dword ptr [ecx + 0xbadf00d]
0x80486f4:	ret	
Gadget(8b11c3, 0x804875b, 0x804875d, None, None)
0x804875b:	mov	edx, dword ptr [ecx]
0x804875d:	ret	
Gadget(8b12c3, 0x8048770, 0x8048772, None, None)
0x8048770:	mov	edx, dword ptr [edx]
0x8048772:	ret	
Gadget(be000031c031dbc3, 0x8048710, 0x8048717, None, None)
0x8048710:	mov	esi, 0xc0310000
0x8048715:	xor	ebx, ebx
0x8048717:	ret	
Gadget(8b74240889fd59c3, 0x804871a, 0x8048721, None, None)
0x804871a:	mov	esi, dword ptr [esp + 8]
0x804871e:	mov	ebp, edi
0x8048720:	pop	ecx
0x8048721:	ret	
Gadget(8b642404c3, 0x80487bc, 0x80487c0, None, None)
0x80487bc:	mov	esp, dword ptr [esp + 4]
0x80487c0:	ret	
Gadget(f7e3c3, 0x804879d, 0x804879f, None, None)
0x804879d:	mul	ebx
0x804879f:	ret	
Gadget(f7e1c3, 0x80487a0, 0x80487a2, None, None)
0x80487a0:	mul	ecx
0x80487a2:	ret	
Gadget(f7e2c3, 0x80487a3, 0x80487a5, None, None)
0x80487a3:	mul	edx
0x80487a5:	ret	
Gadget(908b1c24c3, 0x80485ef, 0x80485f3, None, None)
0x80485ef:	nop	
0x80485f0:	mov	ebx, dword ptr [esp]
0x80485f3:	ret	
Gadget(9066908b1c24c3, 0x80485ed, 0x80485f3, None, None)
0x80485ed:	nop	
0x80485ee:	nop	
0x80485f0:	mov	ebx, dword ptr [esp]
0x80485f3:	ret	
Gadget(90669066908b1c24c3, 0x80485eb, 0x80485f3, None, None)
0x80485eb:	nop	
0x80485ec:	nop	
0x80485ee:	nop	
0x80485f0:	mov	ebx, dword ptr [esp]
0x80485f3:	ret	
Gadget(906690669066908b1c24c3, 0x80485e9, 0x80485f3, None, None)
0x80485e9:	nop	
0x80485ea:	nop	
0x80485ec:	nop	
0x80485ee:	nop	
0x80485f0:	mov	ebx, dword ptr [esp]
0x80485f3:	ret	
Gadget(0c5b5e5f5dc3, 0x8048a47, 0x8048a4c, None, None)
0x8048a47:	or	al, 0x5b
0x8048a49:	pop	esi
0x8048a4a:	pop	edi
0x8048a4b:	pop	ebp
0x8048a4c:	ret	
Gadget(08ffd0c9c3, 0x8048625, 0x8048629, None, None)
0x8048625:	or	bh, bh
0x8048627:	ror	cl, 1
0x8048629:	ret	
Gadget(08ffd2c9c3, 0x8048662, 0x8048666, None, None)
0x8048662:	or	bh, bh
0x8048664:	ror	cl, cl
0x8048666:	ret	
Gadget(0883f8067701c3, 0x8048609, 0x804860f, None, None)
0x8048609:	or	byte ptr [ebx + 0x17706f8], al
0x804860f:	ret	
Gadget(09d8c3, 0x804878b, 0x804878d, None, None)
0x804878b:	or	eax, ebx
0x804878d:	ret	
Gadget(efbe000031c031dbc3, 0x804870f, 0x8048717, None, None)
0x804870f:	out	dx, eax
0x8048710:	mov	esi, 0xc0310000
0x8048715:	xor	ebx, ebx
0x8048717:	ret	
Gadget(58c3, 0x80486e6, 0x80486e7, None, None)
0x80486e6:	pop	eax
0x80486e7:	ret	
Gadget(5dc3, 0x8048a4b, 0x8048a4c, None, None)
0x8048a4b:	pop	ebp
0x8048a4c:	ret	
Gadget(5b5e5f5dc3, 0x8048a48, 0x8048a4c, None, None)
0x8048a48:	pop	ebx
0x8048a49:	pop	esi
0x8048a4a:	pop	edi
0x8048a4b:	pop	ebp
0x8048a4c:	ret	
Gadget(5bc3, 0x80484b9, 0x80484ba, None, None)
0x80484b9:	pop	ebx
0x80484ba:	ret	
Gadget(595ac3, 0x804874a, 0x804874c, None, None)
0x804874a:	pop	ecx
0x804874b:	pop	edx
0x804874c:	ret	
Gadget(59c3, 0x8048720, 0x8048721, None, None)
0x8048720:	pop	ecx
0x8048721:	ret	
Gadget(5f5dc3, 0x8048a4a, 0x8048a4c, None, None)
0x8048a4a:	pop	edi
0x8048a4b:	pop	ebp
0x8048a4c:	ret	
Gadget(5ac3, 0x804874b, 0x804874c, None, None)
0x804874b:	pop	edx
0x804874c:	ret	
Gadget(5e5f5dc3, 0x8048a49, 0x8048a4c, None, None)
0x8048a49:	pop	esi
0x8048a4a:	pop	edi
0x8048a4b:	pop	ebp
0x8048a4c:	ret	
Gadget(0e1441c3, 0x8048bbc, 0x8048bbf, None, None)
0x8048bbc:	push	cs
0x8048bbd:	adc	al, 0x41
0x8048bbf:	ret	
Gadget(0e20470e1441c3, 0x8048bb9, 0x8048bbf, None, None)
0x8048bb9:	push	cs
0x8048bba:	and	byte ptr [edi + 0xe], al
0x8048bbd:	adc	al, 0x41
0x8048bbf:	ret	
Gadget(0e304d0e20470e1441c3, 0x8048bb6, 0x8048bbf, None, None)
0x8048bb6:	push	cs
0x8048bb7:	xor	byte ptr [ebp + 0xe], cl
0x8048bba:	and	byte ptr [edi + 0xe], al
0x8048bbd:	adc	al, 0x41
0x8048bbf:	ret	
Gadget(60a00408ffd0c9c3, 0x8048622, 0x8048629, None, None)
0x8048622:	pushal	
0x8048623:	mov	al, byte ptr [0xd0ff0804]
0x8048628:	leave	
0x8048629:	ret	
Gadget(60a00408ffd2c9c3, 0x804865f, 0x8048666, None, None)
0x804865f:	pushal	
0x8048660:	mov	al, byte ptr [0xd2ff0804]
0x8048665:	leave	
0x8048666:	ret	
Gadget(c2c1ea, 0x804863e, 0x804863e, None, None)
0x804863e:	ret	0xeac1
ERROR: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED)
ERROR: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED)
Gadget(c3, 0x80484a2, 0x80484a2, None, None)
0x80484a2:	ret	
Gadget(d08b74240889fd59c3, 0x8048719, 0x8048721, None, None)
0x8048719:	ror	byte ptr [ebx - 0x76f7db8c], 1
0x804871f:	std	
0x8048720:	pop	ecx
0x8048721:	ret	
Gadget(d0c9c3, 0x8048627, 0x8048629, None, None)
0x8048627:	ror	cl, 1
0x8048629:	ret	
Gadget(d2c9c3, 0x8048664, 0x8048666, None, None)
0x8048664:	ror	cl, cl
0x8048666:	ret	
Gadget(c031dbc3, 0x8048714, 0x8048717, None, None)
0x8048714:	sal	byte ptr [ecx], 0xdb
0x8048717:	ret	
Gadget(1c24c3, 0x80485f1, 0x80485f3, None, None)
0x80485f1:	sbb	al, 0x24
0x80485f3:	ret	
Gadget(18c7042460a00408ffd0c9c3, 0x804861e, 0x8048629, None, None)
0x804861e:	sbb	bh, al
0x8048620:	add	al, 0x24
0x8048622:	pushal	
0x8048623:	mov	al, byte ptr [0xd0ff0804]
0x8048628:	leave	
0x8048629:	ret	
Gadget(1889442404c7042460a00408ffd2c9c3, 0x8048657, 0x8048666, None, None)
0x8048657:	sbb	byte ptr [ecx - 0x38fbdbbc], cl
0x804865d:	add	al, 0x24
0x804865f:	pushal	
0x8048660:	mov	al, byte ptr [0xd2ff0804]
0x8048665:	leave	
0x8048666:	ret	
Gadget(c1e40a58c3, 0x80486e3, 0x80486e7, None, None)
0x80486e3:	shl	esp, 0xa
0x80486e6:	pop	eax
0x80486e7:	ret	
Gadget(fd59c3, 0x804871f, 0x8048721, None, None)
0x804871f:	std	
0x8048720:	pop	ecx
0x8048721:	ret	
Gadget(2c410e304d0e20470e1441c3, 0x8048bb4, 0x8048bbf, None, None)
0x8048bb4:	sub	al, 0x41
0x8048bb6:	push	cs
0x8048bb7:	xor	byte ptr [ebp + 0xe], cl
0x8048bba:	and	byte ptr [edi + 0xe], al
0x8048bbd:	adc	al, 0x41
0x8048bbf:	ret	
Gadget(29d8c3, 0x8048785, 0x8048787, None, None)
0x8048785:	sub	eax, ebx
0x8048787:	ret	
Gadget(29d1c3, 0x8048767, 0x8048769, None, None)
0x8048767:	sub	ecx, edx
0x8048769:	ret	
Gadget(94c3, 0x8048730, 0x8048731, None, None)
0x8048730:	xchg	eax, esp
0x8048731:	ret	
Gadget(304d0e20470e1441c3, 0x8048bb7, 0x8048bbf, None, None)
0x8048bb7:	xor	byte ptr [ebp + 0xe], cl
0x8048bba:	and	byte ptr [edi + 0xe], al
0x8048bbd:	adc	al, 0x41
0x8048bbf:	ret	
Gadget(3198efbe000031c031dbc3, 0x804870d, 0x8048717, None, None)
0x804870d:	xor	dword ptr [eax + 0xbeef], ebx
0x8048713:	xor	eax, eax
0x8048715:	xor	ebx, ebx
0x8048717:	ret	
Gadget(33830df00000c3, 0x80486f5, 0x80486fb, None, None)
0x80486f5:	xor	eax, dword ptr [ebx + 0xf00d]
0x80486fb:	ret	
Gadget(31c031dbc3, 0x8048713, 0x8048717, None, None)
0x8048713:	xor	eax, eax
0x8048715:	xor	ebx, ebx
0x8048717:	ret	
Gadget(31d8c3, 0x80487b3, 0x80487b5, None, None)
0x80487b3:	xor	eax, ebx
0x80487b5:	ret	
Gadget(31c8c3, 0x80487b6, 0x80487b8, None, None)
0x80487b6:	xor	eax, ecx
0x80487b8:	ret	
Gadget(31d08b74240889fd59c3, 0x8048718, 0x8048721, None, None)
0x8048718:	xor	eax, edx
0x804871a:	mov	esi, dword ptr [esp + 8]
0x804871e:	mov	ebp, edi
0x8048720:	pop	ecx
0x8048721:	ret	
Gadget(31d0c3, 0x80487b9, 0x80487bb, None, None)
0x80487b9:	xor	eax, edx
0x80487bb:	ret	
Gadget(31ed31e444c1e40a58c3, 0x80486de, 0x80486e7, None, None)
0x80486de:	xor	ebp, ebp
0x80486e0:	xor	esp, esp
0x80486e2:	inc	esp
0x80486e3:	shl	esp, 0xa
0x80486e6:	pop	eax
0x80486e7:	ret	
Gadget(31dbc3, 0x8048715, 0x8048717, None, None)
0x8048715:	xor	ebx, ebx
0x8048717:	ret	
Gadget(31d2f7f3c3, 0x80487ae, 0x80487b2, None, None)
0x80487ae:	xor	edx, edx
0x80487b0:	div	ebx
0x80487b2:	ret	
Gadget(31e444c1e40a58c3, 0x80486e0, 0x80486e7, None, None)
0x80486e0:	xor	esp, esp
0x80486e2:	inc	esp
0x80486e3:	shl	esp, 0xa
0x80486e6:	pop	eax
0x80486e7:	ret	
WriteMemOp_Gadget([ECX + 0x0] //= ESI)(c031dbc3, 0x8048714, 0x8048717, [], 4)
WriteMemOp_Gadget([ECX + 0x0] //= ECX)(c031dbc3, 0x8048714, 0x8048717, [], 4)
WriteMemOp_Gadget([EAX + 0xbeef] ^= EBX)(3198efbe000031c031dbc3, 0x804870d, 0x8048717, ['EAX', 'EBX'], 4)
ReadMemOp_Gadget(EAX ^= [EBX + 0xf00d])(33830df00000c3, 0x80486f5, 0x80486fb, ['EAX'], 4)
WriteMem_Gadget([EBX + 0xbadc0de] = ECX)(00000000ba44332211898bdec0ad0bc3, 0x80486fd, 0x804870c, ['EDX'], 4)
WriteMem_Gadget([EBX + 0xbadc0de] = ECX)(000000ba44332211898bdec0ad0bc3, 0x80486fe, 0x804870c, [], 4)
WriteMem_Gadget([EBX + 0xbadc0de] = ECX)(0000ba44332211898bdec0ad0bc3, 0x80486ff, 0x804870c, ['EDX'], 4)
WriteMem_Gadget([EBX + 0xbadc0de] = ECX)(00ba44332211898bdec0ad0bc3, 0x8048700, 0x804870c, [], 4)
WriteMem_Gadget([EBX + 0xbadc0de] = ECX)(2211898bdec0ad0bc3, 0x8048704, 0x804870c, ['EDX'], 4)
WriteMem_Gadget([EAX + 0x0] = EAX)(8900c3, 0x8048779, 0x804877b, [], 4)
WriteMem_Gadget([EAX + 0x0] = EBX)(8918c3, 0x804873f, 0x8048741, [], 4)
WriteMem_Gadget([EAX + 0x0] = ECX)(8908c3, 0x804877f, 0x8048781, [], 4)
WriteMem_Gadget([EBX + 0xbadc0de] = ECX)(898bdec0ad0bc3, 0x8048706, 0x804870c, [], 4)
WriteMem_Gadget([EBX + 0x0] = EAX)(8903c3, 0x804877c, 0x804877e, [], 4)
WriteMem_Gadget([ECX + 0x0] = EDX)(8911c3, 0x8048758, 0x804875a, [], 4)
WriteMem_Gadget([EBX + 0xbadc0de] = ECX)(b800000000ba44332211898bdec0ad0bc3, 0x80486fc, 0x804870c, ['EAX', 'EDX'], 4)
WriteMem_Gadget([EBX + 0xbadc0de] = ECX)(ba44332211898bdec0ad0bc3, 0x8048701, 0x804870c, ['EDX'], 4)
BinOp_Gadget(EAX, EAX, +, EBX)(01d8c3, 0x8048732, 0x8048734, ['EAX'], 4)
BinOp_Gadget(EAX, EAX, +, ECX)(01c8c3, 0x80487a9, 0x80487ab, ['EAX'], 4)
BinOp_Gadget(EBX, EBX, +, ECX)(01cbc3, 0x80487a6, 0x80487a8, ['EBX'], 4)
BinOp_Gadget(ECX, EAX, +, ECX)(01c1c3, 0x804875e, 0x8048760, ['ECX'], 4)
BinOp_Gadget(ECX, EDX, +, ECX)(01d1c3, 0x8048764, 0x8048766, ['ECX'], 4)
BinOp_Gadget(EDX, EDX, +, EBX)(01dac3, 0x8048761, 0x8048763, ['EDX'], 4)
BinOp_Gadget(EDX, EDX, +, ECX)(01cac3, 0x8048722, 0x8048724, ['EDX'], 4)
BinOp_Gadget(EAX, EAX, &, EBX)(21d8c3, 0x804878e, 0x8048790, ['EAX'], 4)
BinOp_Gadget(EAX, EAX, &, EDX)(21d0c3, 0x8048797, 0x8048799, ['EAX'], 4)
BinOp_Gadget(EBX, EBX, &, ECX)(21cbc3, 0x8048794, 0x8048796, ['EBX'], 4)
BinOp_Gadget(EBX, EDX, &, EBX)(21d3c3, 0x804879a, 0x804879c, ['EBX'], 4)
BinOp_Gadget(ECX, EDX, &, ECX)(21d1c3, 0x8048791, 0x8048793, ['ECX'], 4)
BinOp_Gadget(EDX, EAX, -, EBX)(f7f3c3, 0x80487b0, 0x80487b2, ['EAX', 'EDX'], 4)
BinOp_Gadget(EAX, EAX, //, EDX)(f7f3c3, 0x80487b0, 0x80487b2, ['EAX', 'EDX'], 4)
BinOp_Gadget(EAX, EAX, //, EBX)(f7f3c3, 0x80487b0, 0x80487b2, ['EAX', 'EDX'], 4)
BinOp_Gadget(EAX, EAX, //, ESI)(f7f3c3, 0x80487b0, 0x80487b2, ['EAX', 'EDX'], 4)
BinOp_Gadget(EAX, EAX, *, EBX)(f7e3c3, 0x804879d, 0x804879f, ['EAX', 'EDX'], 4)
BinOp_Gadget(EAX, EAX, *, ECX)(f7e1c3, 0x80487a0, 0x80487a2, ['EAX', 'EDX'], 4)
BinOp_Gadget(EAX, EAX, *, EDX)(f7e2c3, 0x80487a3, 0x80487a5, ['EAX', 'EDX'], 4)
BinOp_Gadget(EAX, EAX, |, EBX)(09d8c3, 0x804878b, 0x804878d, ['EAX'], 4)
BinOp_Gadget(EAX, EAX, -, EBX)(29d8c3, 0x8048785, 0x8048787, ['EAX'], 4)
BinOp_Gadget(ECX, ECX, -, EDX)(29d1c3, 0x8048767, 0x8048769, ['ECX'], 4)
BinOp_Gadget(EAX, EAX, ^, EBX)(31d8c3, 0x80487b3, 0x80487b5, ['EAX'], 4)
BinOp_Gadget(EAX, EAX, ^, ECX)(31c8c3, 0x80487b6, 0x80487b8, ['EAX'], 4)
BinOp_Gadget(EAX, EAX, ^, EDX)(31d08b74240889fd59c3, 0x8048718, 0x8048721, ['EAX', 'EBP', 'ESI', 'ECX'], 8)
BinOp_Gadget(EAX, EAX, ^, EDX)(31d0c3, 0x80487b9, 0x80487bb, ['EAX'], 4)
BinOp_Gadget(EAX, EAX, //, EBX)(31d2f7f3c3, 0x80487ae, 0x80487b2, ['EAX', 'EDX'], 4)
ReadMem_Gadget(EDX = [EBX + 0x1112237])(01dc595ac3, 0x8048748, 0x804874c, ['EDX', 'ECX'], 12)
ReadMem_Gadget(ECX = [EBX + 0x1112233])(01dc595ac3, 0x8048748, 0x804874c, ['EDX', 'ECX'], 12)
ReadMem_Gadget(EAX = [EAX + 0x0])(8b00c3, 0x8048773, 0x8048775, ['EAX'], 4)
ReadMem_Gadget(EAX = [EBX + 0xdeadbeef])(8b83efbeadde8b910df0ad0bc3, 0x80486e8, 0x80486f4, ['EAX', 'EDX'], 4)
ReadMem_Gadget(EDX = [ECX + 0xbadf00d])(8b83efbeadde8b910df0ad0bc3, 0x80486e8, 0x80486f4, ['EAX', 'EDX'], 4)
ReadMem_Gadget(EAX = [EBX + 0x0])(8b03c3, 0x804873c, 0x804873e, ['EAX'], 4)
ReadMem_Gadget(EBX = [EAX + 0x0])(8b18c3, 0x8048776, 0x8048778, ['EBX'], 4)
ReadMem_Gadget(ECX = [ECX + 0x0])(8b09c3, 0x804876a, 0x804876c, ['ECX'], 4)
ReadMem_Gadget(ECX = [EDX + 0x0])(8b0ac3, 0x804876d, 0x804876f, ['ECX'], 4)
ReadMem_Gadget(EDX = [EBX + 0x0])(8b13c3, 0x8048782, 0x8048784, ['EDX'], 4)
ReadMem_Gadget(EDX = [ECX + 0xbadf00d])(8b910df0ad0bc3, 0x80486ee, 0x80486f4, ['EDX'], 4)
ReadMem_Gadget(EDX = [ECX + 0x0])(8b11c3, 0x804875b, 0x804875d, ['EDX'], 4)
ReadMem_Gadget(EDX = [EDX + 0x0])(8b12c3, 0x8048770, 0x8048772, ['EDX'], 4)
Lahf_Gadget(9fc3, 0x8048738, 0x8048739, ['EAX'], 4)
CopyReg_Gadget(EBP, EDI)(240889fd59c3, 0x804871c, 0x8048721, ['EAX', 'EBP', 'ECX'], 8)
CopyReg_Gadget(EAX, EBX)(89d8c3, 0x8048735, 0x8048737, ['EAX'], 4)
CopyReg_Gadget(EAX, ESP)(89e0c3, 0x8048745, 0x8048747, ['EAX'], 4)
CopyReg_Gadget(EBP, EDI)(89fd59c3, 0x804871e, 0x8048721, ['EBP', 'ECX'], 8)
CopyReg_Gadget(EBP, EDI)(8b74240889fd59c3, 0x804871a, 0x8048721, ['EBP', 'ESI', 'ECX'], 8)
CopyReg_Gadget(EBP, EDI)(31d08b74240889fd59c3, 0x8048718, 0x8048721, ['EAX', 'EBP', 'ESI', 'ECX'], 8)
OpEsp_Gadget(+, EAX)(01c4c3, 0x8048742, 0x8048744, [], 4)
OpEsp_Gadget(+, EBX)(01dc595ac3, 0x8048748, 0x804874c, ['EDX', 'ECX'], 12)
LoadConst_Gadget(EBX, 0x8)(000083c4085bc3, 0x80484b4, 0x80484ba, ['EBX'], 16)
LoadConst_Gadget(EDI, 0x14)(83c40c5b5e5f5dc3, 0x8048a45, 0x8048a4c, ['EDI', 'EBP', 'EBX', 'ESI'], 32)
LoadConst_Gadget(EBP, 0x18)(83c40c5b5e5f5dc3, 0x8048a45, 0x8048a4c, ['EDI', 'EBP', 'EBX', 'ESI'], 32)
LoadConst_Gadget(EBX, 0xc)(83c40c5b5e5f5dc3, 0x8048a45, 0x8048a4c, ['EDI', 'EBP', 'EBX', 'ESI'], 32)
LoadConst_Gadget(ESI, 0x10)(83c40c5b5e5f5dc3, 0x8048a45, 0x8048a4c, ['EDI', 'EBP', 'EBX', 'ESI'], 32)
LoadConst_Gadget(EBX, 0x8)(83c4085bc3, 0x80484b6, 0x80484ba, ['EBX'], 16)
LoadConst_Gadget(ECX, 0x0)(240889fd59c3, 0x804871c, 0x8048721, ['EAX', 'EBP', 'ECX'], 8)
LoadConst_Gadget(EAX, 0x0)(e40a58c3, 0x80486e4, 0x80486e7, ['EAX'], 8)
LoadConst_Gadget(ECX, 0x0)(89fd59c3, 0x804871e, 0x8048721, ['EBP', 'ECX'], 8)
LoadConst_Gadget(EBX, 0x0)(8b1c24c3, 0x80485f0, 0x80485f3, ['EBX'], 4)
LoadConst_Gadget(ESI, 0x8)(8b74240889fd59c3, 0x804871a, 0x8048721, ['EBP', 'ESI', 'ECX'], 8)
LoadConst_Gadget(ECX, 0x0)(8b74240889fd59c3, 0x804871a, 0x8048721, ['EBP', 'ESI', 'ECX'], 8)
LoadConst_Gadget(EBX, 0x0)(908b1c24c3, 0x80485ef, 0x80485f3, ['EBX'], 4)
LoadConst_Gadget(EBX, 0x0)(9066908b1c24c3, 0x80485ed, 0x80485f3, ['EBX'], 4)
LoadConst_Gadget(EBX, 0x0)(90669066908b1c24c3, 0x80485eb, 0x80485f3, ['EBX'], 4)
LoadConst_Gadget(EBX, 0x0)(906690669066908b1c24c3, 0x80485e9, 0x80485f3, ['EBX'], 4)
LoadConst_Gadget(EDI, 0x4)(0c5b5e5f5dc3, 0x8048a47, 0x8048a4c, ['EDI', 'EAX', 'EBP', 'ESI'], 16)
LoadConst_Gadget(EBP, 0x8)(0c5b5e5f5dc3, 0x8048a47, 0x8048a4c, ['EDI', 'EAX', 'EBP', 'ESI'], 16)
LoadConst_Gadget(ESI, 0x0)(0c5b5e5f5dc3, 0x8048a47, 0x8048a4c, ['EDI', 'EAX', 'EBP', 'ESI'], 16)
LoadConst_Gadget(EAX, 0x0)(58c3, 0x80486e6, 0x80486e7, ['EAX'], 8)
LoadConst_Gadget(EBP, 0x0)(5dc3, 0x8048a4b, 0x8048a4c, ['EBP'], 8)
LoadConst_Gadget(EDI, 0x8)(5b5e5f5dc3, 0x8048a48, 0x8048a4c, ['EDI', 'EBP', 'EBX', 'ESI'], 20)
LoadConst_Gadget(EBP, 0xc)(5b5e5f5dc3, 0x8048a48, 0x8048a4c, ['EDI', 'EBP', 'EBX', 'ESI'], 20)
LoadConst_Gadget(EBX, 0x0)(5b5e5f5dc3, 0x8048a48, 0x8048a4c, ['EDI', 'EBP', 'EBX', 'ESI'], 20)
LoadConst_Gadget(ESI, 0x4)(5b5e5f5dc3, 0x8048a48, 0x8048a4c, ['EDI', 'EBP', 'EBX', 'ESI'], 20)
LoadConst_Gadget(EBX, 0x0)(5bc3, 0x80484b9, 0x80484ba, ['EBX'], 8)
LoadConst_Gadget(EDX, 0x4)(595ac3, 0x804874a, 0x804874c, ['EDX', 'ECX'], 12)
LoadConst_Gadget(ECX, 0x0)(595ac3, 0x804874a, 0x804874c, ['EDX', 'ECX'], 12)
LoadConst_Gadget(ECX, 0x0)(59c3, 0x8048720, 0x8048721, ['ECX'], 8)
LoadConst_Gadget(EDI, 0x0)(5f5dc3, 0x8048a4a, 0x8048a4c, ['EDI', 'EBP'], 12)
LoadConst_Gadget(EBP, 0x4)(5f5dc3, 0x8048a4a, 0x8048a4c, ['EDI', 'EBP'], 12)
LoadConst_Gadget(EDX, 0x0)(5ac3, 0x804874b, 0x804874c, ['EDX'], 8)
LoadConst_Gadget(EDI, 0x4)(5e5f5dc3, 0x8048a49, 0x8048a4c, ['EDI', 'EBP', 'ESI'], 16)
LoadConst_Gadget(EBP, 0x8)(5e5f5dc3, 0x8048a49, 0x8048a4c, ['EDI', 'EBP', 'ESI'], 16)
LoadConst_Gadget(ESI, 0x0)(5e5f5dc3, 0x8048a49, 0x8048a4c, ['EDI', 'EBP', 'ESI'], 16)
LoadConst_Gadget(ECX, 0x0)(d08b74240889fd59c3, 0x8048719, 0x8048721, ['ECX'], 8)
LoadConst_Gadget(ECX, 0x0)(fd59c3, 0x804871f, 0x8048721, ['ECX'], 8)
LoadConst_Gadget(ESI, 0x8)(31d08b74240889fd59c3, 0x8048718, 0x8048721, ['EAX', 'EBP', 'ESI', 'ECX'], 8)
LoadConst_Gadget(ECX, 0x0)(31d08b74240889fd59c3, 0x8048718, 0x8048721, ['EAX', 'EBP', 'ESI', 'ECX'], 8)
